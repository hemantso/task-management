{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useAppSelector } from '../store/hooks';\nconst useSearchQuery = searchQuery => {\n  _s();\n  const tasks = useAppSelector(state => state.tasks.tasks);\n  const [matchedTasks, setMatchedTasks] = useState([]);\n  useEffect(() => {\n    if (searchQuery.toLocaleLowerCase() === 'in progress') {}\n    const filteredTasks = tasks.filter(task => {\n      return task.title.toLowerCase().includes(searchQuery.toLowerCase()) || task.title.toLowerCase().includes(searchQuery.toLowerCase());\n    });\n    if (searchQuery.trim().length) {\n      setMatchedTasks(filteredTasks);\n    } else {\n      setMatchedTasks([]);\n    }\n  }, [searchQuery, tasks]);\n  return matchedTasks;\n};\n_s(useSearchQuery, \"qGkEU+DCgUok8jzWAWvoK5gut/k=\", false, function () {\n  return [useAppSelector];\n});\nexport default useSearchQuery;","map":{"version":3,"names":["useEffect","useState","useAppSelector","useSearchQuery","searchQuery","tasks","state","matchedTasks","setMatchedTasks","toLocaleLowerCase","filteredTasks","filter","task","title","toLowerCase","includes","trim","length"],"sources":["/Users/hemantsoni/Documents/GitHub/task/task-management/src/hooks/useSearchQuery.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Task } from '../interfaces';\nimport { useAppSelector } from '../store/hooks';\n\nconst useSearchQuery = (searchQuery: string) => {\n  const tasks = useAppSelector((state) => state.tasks.tasks);\n\n  const [matchedTasks, setMatchedTasks] = useState<Task[]>([]);\n\n  useEffect(() => {\n\n    if(searchQuery.toLocaleLowerCase() === 'in progress') {\n      \n    }\n    const filteredTasks = tasks.filter((task: Task) => {\n      return task.title.toLowerCase().includes(searchQuery.toLowerCase()) || task.title.toLowerCase().includes(searchQuery.toLowerCase());\n    });\n    if (searchQuery.trim().length) {\n      setMatchedTasks(filteredTasks);\n    } else {\n      setMatchedTasks([]);\n    }\n  }, [searchQuery, tasks]);\n\n  return matchedTasks;\n};\n\nexport default useSearchQuery;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,cAAc,QAAQ,gBAAgB;AAE/C,MAAMC,cAAc,GAAIC,WAAmB,IAAK;EAAA;EAC9C,MAAMC,KAAK,GAAGH,cAAc,CAAEI,KAAK,IAAKA,KAAK,CAACD,KAAK,CAACA,KAAK,CAAC;EAE1D,MAAM,CAACE,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAS,EAAE,CAAC;EAE5DD,SAAS,CAAC,MAAM;IAEd,IAAGI,WAAW,CAACK,iBAAiB,EAAE,KAAK,aAAa,EAAE,CAEtD;IACA,MAAMC,aAAa,GAAGL,KAAK,CAACM,MAAM,CAAEC,IAAU,IAAK;MACjD,OAAOA,IAAI,CAACC,KAAK,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACX,WAAW,CAACU,WAAW,EAAE,CAAC,IAAIF,IAAI,CAACC,KAAK,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACX,WAAW,CAACU,WAAW,EAAE,CAAC;IACrI,CAAC,CAAC;IACF,IAAIV,WAAW,CAACY,IAAI,EAAE,CAACC,MAAM,EAAE;MAC7BT,eAAe,CAACE,aAAa,CAAC;IAChC,CAAC,MAAM;MACLF,eAAe,CAAC,EAAE,CAAC;IACrB;EACF,CAAC,EAAE,CAACJ,WAAW,EAAEC,KAAK,CAAC,CAAC;EAExB,OAAOE,YAAY;AACrB,CAAC;AAAC,GArBIJ,cAAc;EAAA,QACJD,cAAc;AAAA;AAsB9B,eAAeC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}